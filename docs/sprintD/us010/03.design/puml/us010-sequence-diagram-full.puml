@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "User" as Client
participant ":CreatePurchaseOrderUI" as OrderUI
participant ":CreatePurchaseOrderController" as OrderCTRL
participant ":Repositories" as Repositories
participant "repositories\n:Repositories" as repositories
participant "announcementRepository:\nAnnouncementRepository" as Announcements
participant ":Property" as Property
participant "user:\nAuthenticationRepository" as AuthenticationRepository
participant ":PurchaseOrder" as PurchaseOrder
participant ":PurchaseOrderRepository" as PurchaseOrderRepository
'participant ":User" as User




activate Client

    Client -> OrderUI : asks to create a purchase order
    activate OrderUI
        OrderUI -> OrderCTRL** : create
        OrderUI --> Client : shows CreatePurchaseOrderUI
        OrderUI -> OrderCTRL : getCopyAnnouncementsList()
        activate OrderCTRL
        OrderCTRL -> Repositories : getInstance()
                    activate Repositories
                        Repositories --> OrderCTRL : repositories
                    deactivate Repositories

                    OrderCTRL -> repositories : getAnnouncementRepository()
                    activate repositories
                        repositories --> OrderCTRL : getAnnouncementRepository
                    deactivate repositories
        OrderCTRL --> OrderUI : getCopyAnnouncementsList
        deactivate OrderCTRL
        loop for every announcement
        OrderUI -> OrderCTRL : getProperty()
                activate OrderCTRL

                    OrderCTRL -> Announcements : getAnnouncementWithID(propertyID)
                    activate Announcements
                        Announcements -> Property : getProperty()
                        activate Property
                            Property --> Announcements : property
                        deactivate Property
                        Announcements --> OrderCTRL : property
                    deactivate Announcements
                    OrderCTRL --> OrderUI : property
                deactivate OrderCTRL
        end loop
        OrderUI --> Client : shows Announcements
        loop until checkAnnouncement(propertyID) == true
        OrderUI --> Client : requests data
    deactivate OrderUI

    Client -> OrderUI : selects the intended property
    activate OrderUI
        OrderUI -> OrderCTRL : checkAnnouncement(propertyID)
        activate OrderCTRL
            OrderCTRL -> Announcements : size()
            activate Announcements
                Announcements --> OrderCTRL : size
            deactivate Announcements
            OrderCTRL --> OrderUI : checkAnnouncement
        deactivate OrderCTRL
        alt checks if he already submitted a purchase order
        OrderUI -> OrderCTRL : checkUserPurchaseOrderExists(userEmail, id)
            activate OrderCTRL

                    OrderCTRL -> Repositories : getInstance()
                                activate Repositories
                                    Repositories --> OrderCTRL : repositories
                                deactivate Repositories

                                OrderCTRL -> repositories : getPurchaseOrderRepository()
                                activate repositories
                                    repositories --> OrderCTRL : getPurchaseOrderRepository
                                deactivate repositories

                OrderCTRL -> PurchaseOrderRepository : getPurchaseOrdersRequested()
                activate PurchaseOrderRepository
                    PurchaseOrderRepository --> OrderCTRL : getPurchaseOrdersRequested
                deactivate PurchaseOrderRepository
                OrderCTRL -> PurchaseOrderRepository : checkUserPurchaseOrderExists(userEmail, id)
                activate PurchaseOrderRepository
                    PurchaseOrderRepository --> OrderCTRL : checkUserPurchaseOrderExists
                deactivate PurchaseOrderRepository
            OrderCTRL --> OrderUI : checkUserPurchaseOrderExists
            deactivate OrderCTRL
        OrderUI --> Client : informs that he already ordered a purchase \n for that property.
        end alt
        end loop
        OrderUI --> Client : requests the order amount
    deactivate OrderUI

    Client -> OrderUI : writes the order amount
    activate OrderUI
        OrderUI -> OrderCTRL : createPurchaseOrder(userEmail, announcement, orderAmount, acceptance)
        activate OrderCTRL

            OrderCTRL -> repositories : getAuthenticationRepository()
            activate repositories
                repositories --> OrderCTRL : getAuthenticationRepository
            deactivate repositories

            OrderCTRL -> AuthenticationRepository : getCurrentUserSession()
            activate AuthenticationRepository
                AuthenticationRepository --> OrderCTRL : getCurrentUserSession
            deactivate AuthenticationRepository

            OrderCTRL -> PurchaseOrder : PurchaseOrder(userEmail, announcement, orderAmount, acceptance)
            activate PurchaseOrder
                PurchaseOrder --> OrderCTRL : purchaseOrder
            deactivate PurchaseOrder

            OrderCTRL -> PurchaseOrderRepository : checkPurchaseOrderExists(purchaseOrder)
            activate PurchaseOrderRepository
                PurchaseOrderRepository --> OrderCTRL : checkPurchaseOrderExists
            deactivate PurchaseOrderRepository

            alt if checkPurchaseOrderAmountExists == true
            OrderCTRL --> OrderUI : checkPurchaseOrderAmountExists
            OrderUI --> Client : inform that already exists an equal offer \nwhich will take priority
            end alt

            OrderCTRL -> PurchaseOrderRepository : addPurchaseOrder(purchaseOrder)
            activate PurchaseOrderRepository
                PurchaseOrderRepository --> OrderCTRL : addPurchaseOrder
            deactivate PurchaseOrderRepository

            OrderCTRL --> OrderUI : createPurchaseOrder
            deactivate OrderCTRL
        deactivate OrderCTRL

        OrderUI --> Client : shows opperation result (successful/unsuccessful)
    deactivate OrderUI

    deactivate OrderUI

deactivate Client

@enduml